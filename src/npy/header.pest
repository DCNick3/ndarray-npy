header = { soi ~ "{" ~ (key ~ ":" ~ value ~ ",")* ~ (key ~ ":" ~ value)? ~ "}" ~ "\n" ~ eoi }

key = { string }
value = { string | bool | shape }

// "string", 'string', """string""", and '''string'''
string = ${
    (push("\"" | "'") ~ short_string_body ~ pop) |
    (push("\"\"\"" | "'''") ~ long_string_body ~ pop)
}
short_string_body = ${
    (short_string_non_escape | line_continuation_seq | string_escape_seq)*
}
short_string_non_escape = @{
    (!("\\" | newline | peek) ~ any)+
}
long_string_body = ${
    (long_string_non_escape | line_continuation_seq | string_escape_seq)*
}
long_string_non_escape = @{
    (!("\\" | peek) ~ any)+
}
line_continuation_seq = @{ "\\" ~ newline }
string_escape_seq = ${"\\" ~ (
    char_escape | octal_escape | hex_escape | name_escape | any_escape
)}
char_escape = @{ "\\" | "'" | "\"" | "a" | "b" | "f" | "n" | "r" | "t" | "v" }
octal_escape = @{ octal_digit{1, 3} }
hex_escape = @{ "x" ~ hex_digit{2} | "u" ~ hex_digit{4} | "U" ~ hex_digit{8} }
name_escape = @{ "N{" ~ (!"}" ~ any)* ~ "}" }
any_escape = @{ any }

// booleans
bool = @{ "True" | "False" }

// Only parse decimal integers, and don't allow `_`.
usize = @{ nonzerodigit ~ dec_digit* | "0"+ }
nonzerodigit = @{ '1'..'9' }

shape = { "(" ~ ((usize ~ ",")+ ~ usize?)? ~ ")" }

hex_digit = @{ '0'..'9' | 'A'..'F' | 'a'..'f' }
dec_digit = @{ '0'..'9' }
octal_digit = @{ '0'..'7' }
newline = @{ "\r\n" | "\n" | "\r" }
whitespace = _{ " " | "\t" | "\x0C" }
